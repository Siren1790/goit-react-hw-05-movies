{"version":3,"file":"static/js/278.d40787ec.chunk.js","mappings":"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","sources":["ApiService/apiService.js","components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'fed7db976d902fcdece547680e82ff9e';\n// const API_KEY = 'fed7db976d902fe547680e82ff9e';\n\nconst API_URL_TRENDING_MOVIE =\n  'https://api.themoviedb.org/3/trending/movie/week';\nconst API_URL_MOVIE_ID = 'https://api.themoviedb.org/3/movie/';\n\nconst API_URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\nexport const getTrandingMovies = async page => {\n  const { data } = await axios.get(API_URL_TRENDING_MOVIE, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n      per_page: 6,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getByName = async (searchQuery, page) => {\n  const {data } = await axios.get(API_URL_SEARCH, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      page: page,\n    }\n  })\n\n  return data;\n}","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 280px);\n  gap: 25px;\n  list-style-type: none;\n`;\n\nexport const CardWrapper = styled.li`\n  border: 1px solid black;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: transform 0.65s;\n\n  &:hover {\n    transform: scale(1.05);\n    -webkit-box-shadow: 0px 0px 89px 1px rgba(209, 181, 71, 0.62);\n    -moz-box-shadow: 0px 0px 89px 1px rgba(209, 181, 71, 0.62);\n    box-shadow: 0px 0px 89px 1px rgba(209, 181, 71, 0.62);\n  }\n\n  > a {\n    text-decoration: none;\n  }\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: 75;\n  border-radius: 10px;\n`;\nexport const ProductName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Container, CardWrapper, ProductName, Img } from './MovieList.styled.js';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {movies.map(movie => {\n        const { title, poster_path, id } = movie;\n        return (\n          <CardWrapper key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <Img\n                src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                alt={title}\n              />\n              <ProductName>{title}</ProductName>\n            </Link>\n          </CardWrapper>\n        );\n      })}\n    </Container>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getByName } from 'ApiService/apiService';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [moviesData, setMoviesData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n  useEffect(() => {\n    if (searchQuery === `` || searchQuery === null) {\n      return;\n    }\n    const fetchByQuery = async () => {\n      try {\n        setIsLoading(true);\n        const {results} = await getByName(searchQuery);\n        setMoviesData(results);\n      } catch (error) {\n        console.log(error);\n        return alert(`Sorry, please try again`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchByQuery();\n  }, [searchQuery]);\n\n  const onHandleSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams({ query: query });\n    setQuery('');\n  };\n  return (\n    <div>\n      <form onSubmit={onHandleSubmit}>\n        <input type=\"text\" value={query} onChange={handleChange} />\n        <button type=\"submit\">Search movie</button>\n      </form>\n      {isLoading && <div>...Loading</div>}\n      {moviesData && <MoviesList movies={moviesData} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","API_URL_MOVIE_ID","getTrandingMovies","page","axios","params","api_key","per_page","data","getMovieById","id","String","getCredits","getReviews","getByName","searchQuery","query","Container","styled","CardWrapper","Img","ProductName","MoviesList","movies","location","useLocation","map","movie","title","poster_path","to","state","from","src","alt","useState","setQuery","moviesData","setMoviesData","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchByQuery","results","console","log","alert","onSubmit","event","preventDefault","type","value","onChange","target"],"sourceRoot":""}