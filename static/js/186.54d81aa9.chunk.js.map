{"version":3,"file":"static/js/186.54d81aa9.chunk.js","mappings":"mTACMA,EAAU,mCAKVC,EAAmB,sCAIZC,EAAiB,mCAAG,WAAMC,GAAN,yFACRC,EAAAA,EAAAA,IANvB,mDAMyD,CACvDC,OAAQ,CACNC,QAASN,EACTG,KAAMA,EACNI,SAAU,KALiB,uBACvBC,EADuB,EACvBA,KADuB,kBAQxBA,GARwB,2CAAH,sDAWjBC,EAAY,mCAAG,WAAMC,GAAN,yFACHN,EAAAA,EAAAA,IAAA,UAAaH,EAAmBU,OAAOD,IAAO,CACnEL,OAAQ,CACNC,QAASN,KAHa,uBAClBQ,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZI,EAAU,mCAAG,WAAMF,GAAN,yFACDN,EAAAA,EAAAA,IAAA,UAAaH,EAAmBU,OAAOD,GAAvC,YAAsD,CAC3EL,OAAQ,CACNC,QAASN,KAHW,uBAChBQ,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,sDASVK,EAAU,mCAAG,WAAMH,GAAN,yFACDN,EAAAA,EAAAA,IAAA,UAAaH,EAAmBU,OAAOD,GAAvC,YAAsD,CAC3EL,OAAQ,CACNC,QAASN,KAHW,uBAChBQ,EADgB,EAChBA,KADgB,kBAMjBA,GANiB,2CAAH,sDASVM,EAAS,mCAAG,WAAOC,EAAaZ,GAApB,yFACDC,EAAAA,EAAAA,IAzCD,4CAyC2B,CAC9CC,OAAQ,CACNC,QAASN,EACTgB,MAAOD,EACPZ,KAAMA,KALa,uBAChBK,EADgB,EAChBA,KADgB,kBAShBA,GATgB,2CAAH,uD,+GCdtB,UA9BgB,WACZ,IAAQS,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAcA,OAbAC,EAAAA,EAAAA,YAAU,YACN,mCAAC,oGAEGD,GAAa,GAFhB,UAGsBV,EAAAA,EAAAA,IAAWI,GAHjC,OAGST,EAHT,OAIGa,EAAWb,EAAKiB,SAJnB,gDAMGC,QAAQC,IAAI,KAAIC,SANnB,yBAQGL,GAAa,GARhB,4EAAD,sDAWD,GAAE,CAACN,KAEF,gCACCK,IAAa,0CACbF,EAAQS,KAAI,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAASrB,EAAnB,EAAmBA,GAAnB,OACT,4BACI,wBAAKoB,KACL,uBAAIC,MAFErB,EADD,MASpB,C","sources":["ApiService/apiService.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'fed7db976d902fcdece547680e82ff9e';\n// const API_KEY = 'fed7db976d902fe547680e82ff9e';\n\nconst API_URL_TRENDING_MOVIE =\n  'https://api.themoviedb.org/3/trending/movie/week';\nconst API_URL_MOVIE_ID = 'https://api.themoviedb.org/3/movie/';\n\nconst API_URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\nexport const getTrandingMovies = async page => {\n  const { data } = await axios.get(API_URL_TRENDING_MOVIE, {\n    params: {\n      api_key: API_KEY,\n      page: page,\n      per_page: 6,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getCredits = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`${API_URL_MOVIE_ID + String(id)}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const getByName = async (searchQuery, page) => {\n  const {data } = await axios.get(API_URL_SEARCH, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n      page: page,\n    }\n  })\n\n  return data;\n}","import { useEffect, useState} from \"react\"\nimport { useParams} from 'react-router-dom';\nimport { getReviews } from \"ApiService/apiService\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsloading] = useState(false);\n    useEffect(() => {\n        (async function fetchData() {\n          try {\n            setIsloading(true);\n            const data = await getReviews(movieId);\n            setReviews(data.results)\n          } catch (err) {\n            console.log(err.message);\n          } finally {\n            setIsloading(false)\n          }\n        })();\n      }, [movieId]);\n    return (\n        <>\n        {isLoading && <div>Loading.....</div>}\n        {reviews.map(({author, content, id}) => (\n            <div key={id}>\n                <h4>{author}</h4>\n                <p>{content}</p>\n            </div>\n        ))}\n        </>\n        \n    )\n}\nexport default Reviews;"],"names":["API_KEY","API_URL_MOVIE_ID","getTrandingMovies","page","axios","params","api_key","per_page","data","getMovieById","id","String","getCredits","getReviews","getByName","searchQuery","query","movieId","useParams","useState","reviews","setReviews","isLoading","setIsloading","useEffect","results","console","log","message","map","author","content"],"sourceRoot":""}